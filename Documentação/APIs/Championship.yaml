openapi: 3.0.1
info:
  title: Championship
  description: Federação Lavrense de Futebol
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento

tags:
  - name: Championship
    description: Manager system championships

paths:
  /championship:
    post:
      summary: Create championship
      description: This resource create a individual championship
      tags:
        - Championship
      requestBody:
        description: Required body to create championship
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChampionshipRequired"
      security:
        - BearerAuth: []
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UserCreated:
                  $ref: "#/components/schemas/ResponseChampionshipCreated"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorName:
                  $ref: "#/components/schemas/ResponseValidationErrorName"
                AlreadyHaveChampionshipInDatabase:
                  $ref: "#/components/schemas/ResponseAlreadyHave"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    get:
      summary: Get championships
      description: Get all championships
      tags:
        - Championship
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: number
            min: 1
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: number
            min: 10
            default: 10
        - name: id_team
          in: query
          required: false
          schema:
            type: number
            min: 1
            max: 99999999999
        - name: nome
          in: query
          required: false
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaginatedChampionship"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationError:
                  $ref: "#/components/schemas/ResponseValidationError"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"

  /championship/{id}:
    get:
      summary: Get championship
      description: This resource get individual championship
      tags:
        - Championship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
          min: 1
          max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Championship"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationError:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipNotFound:
                  $ref: "#/components/schemas/ResponseChampionshipNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    put:
      summary: Put championship
      description: This resource edit individual championship
      tags:
        - Championship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      requestBody:
        description: Required body to create championship
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChampionshipRequired"
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipUpdated:
                  $ref: "#/components/schemas/ResponseChampionshipUpdated"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
                ValidationErrorName:
                  $ref: "#/components/schemas/ResponseValidationErrorName"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipNotFound:
                  $ref: "#/components/schemas/ResponseChampionshipNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    delete:
      summary: Delete championship
      description: This resource delete individual championship
      tags:
        - Championship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipDeleted:
                  $ref: "#/components/schemas/ResponseChampionshipDeleted"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
                CantDelete:
                  $ref: "#/components/schemas/ResponseChampionshipCantBeDeleted"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipNotFound:
                  $ref: "#/components/schemas/ResponseChampionshipNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"

  /championship/{id}/match:
    get:
      summary: Get matches off Championship
      description: This resource get matches of a individual championship
      tags:
        - Championship
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: number
            min: 1
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: number
            min: 10
            default: 10
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChampionshipMatches"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorTeams:
                  $ref: "#/components/schemas/ResponseValidationErrorTeams"
                AlreadyHaveChampionshipTeamInDatabase:
                  $ref: "#/components/schemas/ResponseAlreadyHaveTeam"
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
  /championship/{id}/team:
    patch:
      summary: Add teams to Championship
      description: This resource add teams to a individual championship
      tags:
        - Championship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      requestBody:
        description: Required body to create championship
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teams:
                  type: array
                  items:
                    type: number
                    min: 1
                    max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipCreated:
                  $ref: "#/components/schemas/ResponseChampionshipTeamAdded"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorTeams:
                  $ref: "#/components/schemas/ResponseValidationErrorTeams"
                AlreadyHaveChampionshipTeamInDatabase:
                  $ref: "#/components/schemas/ResponseAlreadyHaveTeam"
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    delete:
      summary: Remove teams from Championship
      description: This resource remove teams to a individual championship
      tags:
        - Championship
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      requestBody:
        description: Required body to create championship
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teams:
                  type: array
                  items:
                    type: number
                    min: 1
                    max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipCreated:
                  $ref: "#/components/schemas/ResponseChampionshipTeamDelete"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorTeams:
                  $ref: "#/components/schemas/ResponseValidationErrorTeams"
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipTeamNotFound:
                  $ref: "#/components/schemas/ResponseChampionshipTeamNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"

  /championship/{championship_id}/champion/team/{team_id}:
    patch:
      summary: Add champion team of Championship
      description: This resource add champion team to  championship
      tags:
        - Championship
      parameters:
        - name: championship_id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
        - name: team_id
          in: path
          required: true
          schema:
            type: number
            min: 1
            max: 99999999999
      security:
        - BearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipCreated:
                  $ref: "#/components/schemas/ResponseChampionshipChampionTeam"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ResponseValidationErrorTeamId:
                  $ref: "#/components/schemas/ResponseValidationErrorTeamId"
                ResponseValidationErrorChampionshipId:
                  $ref: "#/components/schemas/ResponseValidationErrorChampionshipId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ChampionshipTeamNotFound:
                  $ref: "#/components/schemas/ResponseChampionshipTeamNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
components:
  schemas:
    ResponseCodeMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    UNAUTHORIZED:
      value:
        code: "1003"
        message: "Invalid Token!"
    ResponseChampionshipCreated:
      value:
        code: "1013"
        message: Championship was created!
    ResponseChampionshipNotFound:
      value:
        code: "1014"
        message: Championship was not found!
    ResponseChampionshipUpdated:
      value:
        code: "1015"
        message: Championship was updated!
    ResponseChampionshipDeleted:
      value:
        code: "1016"
        message: Championship was deleted!
    ResponseChampionshipCantBeDeleted:
      value:
        code: "1017"
        message: Championship can't be deleted!
    ResponseChampionshipTeamAdded:
      value:
        code: "1018"
        message: Championship teams has been added!
    ResponseChampionshipTeamDelete:
      value:
        code: "1019"
        message: Championship teams has been deleted!
    ResponseChampionshipTeamNotFound:
      value:
        code: "1020"
        message: Championship team was not found!
    ResponseChampionshipChampionTeam:
      value:
        code: "1021"
        message: Championship champions team has been added!
    ResponseAlreadyHave:
      value:
        code: "0003"
        message: Already have this championship in database
    ResponseAlreadyHaveTeam:
      value:
        code: "0003"
        message: Already have this championship teams in database

    ResponseValidationError:
      value:
        code: "0002"
        message: "string"
    ResponseValidationErrorName:
      value:
        code: "0002"
        message: '[nome] "nome" is required'
    ResponseValidationErrorId:
      value:
        code: "0002"
        message: '[id] "id" is required'
    ResponseValidationErrorTeamId:
      value:
        code: "0002"
        message: '[team_id] "team_id" is required'
    ResponseValidationErrorChampionshipId:
      value:
        code: "0002"
        message: '[championship_id ] "championship_id" is required'
    ResponseValidationErrorTeams:
      value:
        code: "0002"
        message: '[teams] "teams" is required'
    InternalServerError:
      value:
        code: "1007"
        message: INTERNAL SERVER ERROR
    Teams:
      type: object
      properties:
        idTime:
          type: number
        gols:
          type: number
    Matches:
      type: object
      properties:
        idPartida:
          type: number
        data:
          type: string
          format: date-time
        idCampeonato:
          type: number
        tipo:
          type: string
        times:
          type: array
          items:
            $ref: "#/components/schemas/Teams"
    ChampionshipMatches:
      type: object
      properties:
        total:
          type: number
        lastPage:
          type: number
        currentPage:
          type: number
        perPage:
          type: number
        from:
          type: number
        to:
          type: number
        data:
          type: array
          items:
            $ref: "#/components/schemas/Matches"
    Championship:
      type: object
      properties:
        idCampeonato:
          type: integer
          min: 1
          max: 99999999999
        idTimeVencedor:
          type: integer
          min: 1
          max: 99999999999
        nome:
          type: string
          uniqueItems: true
        image:
          type: string
          format: binary
    ChampionshipRequired:
      type: object
      properties:
        nome:
          type: string
          uniqueItems: true
    GetPaginatedChampionship:
      type: object
      properties:
        total:
          type: number
        lastPage:
          type: number
        currentPage:
          type: number
        perPage:
          type: number
        from:
          type: number
        to:
          type: number
        data:
          type: array
          items:
            $ref: "#/components/schemas/Championship"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      name: Authorization
      in: header
