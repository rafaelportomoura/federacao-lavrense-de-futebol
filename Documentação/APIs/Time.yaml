openapi: 3.0.1
info:
  title: Teams
  description: Federação Lavrense de Futebol
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento

tags:
  - name: Team
    description: Manager system teams

paths:
  /team:
    post:
      summary: Create team
      description: This resource create a individual team
      tags:
        - Team
      requestBody:
        description: Required body to create team
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequired"
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UserCreated:
                  $ref: "#/components/schemas/ResponseTeamCreated"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorEmail:
                  $ref: "#/components/schemas/ResponseValidationErrorName"
                AlreadyHaveTeamInDatabase:
                  $ref: "#/components/schemas/ResponseAlreadyHave"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    get:
      summary: Get teams
      description: Get all teams
      tags:
        - Team
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: number
            min: 1
            default: 1
        - name: size
          in: query
          required: false
          schema:
            type: number
            min: 10
            default: 10
        - name: IdCamp
          in: query
          required: false
          schema:
            type: number
            min: 0
            max: 99999999999
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaginatedTeam"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationError:
                  $ref: "#/components/schemas/ResponseValidationError"
                AlreadyHaveTeamInDatabase:
                  $ref: "#/components/schemas/ResponseAlreadyHave"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"

  /time/{id}:
    get:
      summary: Get team
      description: This resource get individual team
      tags:
        - Team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
          min: 0
          max: 99999999999
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationError:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                TeamNotFound:
                  $ref: "#/components/schemas/ResponseTeamNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    put:
      summary: Put team
      description: This resource edit individual team
      tags:
        - Team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 0
            max: 99999999999
      requestBody:
        description: Required body to create team
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequired"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                TeamUpdated:
                  $ref: "#/components/schemas/ResponseTeamUpdated"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
                ValidationErrorName:
                  $ref: "#/components/schemas/ResponseValidationErrorName"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                TeamNotFound:
                  $ref: "#/components/schemas/ResponseTeamNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
    delete:
      summary: Delete team
      description: This resource delete individual team
      tags:
        - Team
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            min: 0
            max: 99999999999
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                TeamDeleted:
                  $ref: "#/components/schemas/ResponseTeamDeleted"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                ValidationErrorId:
                  $ref: "#/components/schemas/ResponseValidationErrorId"
                CantDelete:
                  $ref: "#/components/schemas/ResponseTeamCantBeDeleted"
        401:
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                UNAUTHORIZED:
                  $ref: "#/components/schemas/UNAUTHORIZED"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                TeamNotFound:
                  $ref: "#/components/schemas/ResponseTeamNotFound"
        500:
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseCodeMessage"
              examples:
                InternalServerError:
                  $ref: "#/components/schemas/InternalServerError"
components:
  schemas:
    ResponseCodeMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    UNAUTHORIZED:
      value:
        code: "1003"
        message: "Invalid Token!"
    ResponseTeamCreated:
      value:
        code: "1008"
        message: Team was created!
    ResponseTeamUpdated:
      value:
        code: "1010"
        message: Team was updated!
    ResponseTeamDeleted:
      value:
        code: "1011"
        message: Team was deleted!
    ResponseTeamCantBeDeleted:
      value:
        code: "1012"
        message: Team can't be deleted
    ResponseTeamNotFound:
      value:
        code: "1009"
        message: Team was not found!
    ResponseAlreadyHave:
      value:
        code: "0003"
        message: Already have this team in database
    ResponseValidationError:
      value:
        code: "0002"
        message: "string"
    ResponseValidationErrorName:
      value:
        code: "0002"
        message: '[name] "name" is required'
    ResponseValidationErrorId:
      value:
        code: "0002"
        message: '[id] "id" is required'
    InternalServerError:
      value:
        code: "1007"
        message: INTERNAL SERVER ERROR
    Team:
      type: object
      properties:
        idTime:
          type: integer
          min: 0
          max: 99999999999
        nome:
          type: string
          uniqueItems: true
    TeamRequired:
      type: object
      properties:
        nome:
          type: string
          uniqueItems: true
    GetPaginatedTeam:
      type: object
      properties:
        current_page:
          type: number
          min: 1
        total_pages:
          type: number
          min: 1
        current_items:
          type: number
          min: 0
        total_items:
          type: number
          min: 0
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      name: Authorization
      in: header
